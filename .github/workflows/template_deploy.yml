name: Deploy

on:
  workflow_call:
    inputs:
      STAGE:
        required: true
        description: 'Execute gradle tasks before publish'
        type: string
    secrets:
      SIGNING_KEY:
        description: 'Exported ascii armoured key'
        required: true
      SIGNING_PASSWORD:
        description: 'Key password'
        required: true
      REPOSITORY_USERNAME:
        description: 'OSS username'
        required: true
      REPOSITORY_PASSWORD:
        description: 'OSS password'
        required: true

jobs:
  verify:
    name: Verify gradle plugin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - verify
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
      - run: ./gradlew -Preckon.stage=${{ inputs.STAGE }} versionToFile publish --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.REPOSITORY_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.REPOSITORY_PASSWORD }}
      - name: Read VERSION file
        id: extract_version
        run: echo "::set-output name=version::$(cat version.txt)"

  tag-snapshot:
    if: ${{ !endsWith(needs.deploy.outputs.version, 'SNAPSHOT') }}
    name: Tag Release
    runs-on: "ubuntu-latest"
    needs:
      - deploy
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ needs.deploy.outputs.version }}
          automatic_release_tag: ${{ needs.deploy.outputs.version }}
          prerelease: false
          draft: false